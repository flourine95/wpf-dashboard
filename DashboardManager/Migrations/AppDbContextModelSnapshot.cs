// <auto-generated />
using System;
using DashboardManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DashboardManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DashboardManager.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            Images = "brandA.jpg",
                            Name = "Brand A"
                        },
                        new
                        {
                            BrandId = 2,
                            Images = "brandB.jpg",
                            Name = "Brand B"
                        });
                });

            modelBuilder.Entity("DashboardManager.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Images = "electronics.jpg",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            Images = "clothing.jpg",
                            Name = "Clothing"
                        });
                });

            modelBuilder.Entity("DashboardManager.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<byte>("Star")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            FeedbackId = 1,
                            Content = "Excellent product!",
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3163),
                            ProductId = 1,
                            Star = (byte)5,
                            Status = (byte)1,
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3164),
                            UserId = 1
                        },
                        new
                        {
                            FeedbackId = 2,
                            Content = "Good value for money.",
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3166),
                            ProductId = 2,
                            Star = (byte)4,
                            Status = (byte)1,
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3167),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DashboardManager.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("DashboardManager.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3116),
                            Note = "Urgent delivery",
                            Status = (byte)1,
                            Total = 149.98m,
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3116),
                            UserId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3119),
                            Note = "Regular delivery",
                            Status = (byte)0,
                            Total = 49.99m,
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3119),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DashboardManager.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailId = 1,
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3179),
                            OrderId = 1,
                            Price = 99.99m,
                            ProductId = 1,
                            Quantity = 1,
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3180)
                        },
                        new
                        {
                            OrderDetailId = 2,
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3182),
                            OrderId = 1,
                            Price = 49.99m,
                            ProductId = 2,
                            Quantity = 1,
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3182)
                        },
                        new
                        {
                            OrderDetailId = 3,
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3184),
                            OrderId = 2,
                            Price = 49.99m,
                            ProductId = 2,
                            Quantity = 1,
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3184)
                        });
                });

            modelBuilder.Entity("DashboardManager.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("PurchaseCount")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3096),
                            Description = "Description for Product 1",
                            Images = "product1.jpg",
                            Name = "Product 1",
                            OldPrice = 120.00m,
                            Price = 99.99m,
                            PurchaseCount = 100,
                            Quantity = 10,
                            Specification = "Specs for Product 1",
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3097)
                        },
                        new
                        {
                            ProductId = 2,
                            BrandId = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3100),
                            Description = "Description for Product 2",
                            Images = "product2.jpg",
                            Name = "Product 2",
                            OldPrice = 70.00m,
                            Price = 49.99m,
                            PurchaseCount = 200,
                            Quantity = 20,
                            Specification = "Specs for Product 2",
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(3101)
                        });
                });

            modelBuilder.Entity("DashboardManager.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("GradeId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DashboardManager.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WardId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "123 Admin St",
                            Avatar = "avatar1.png",
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(2985),
                            Description = "Administrator",
                            DistrictId = "001",
                            Email = "admin@example.com",
                            EmailVerifiedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(2984),
                            FullName = "Admin User",
                            Ip = "192.168.1.1",
                            Password = "hashed_password",
                            Phone = "0123456789",
                            ProvinceId = "01",
                            Role = (byte)1,
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(2985),
                            UserAgent = "Mozilla/5.0",
                            WardId = "0001"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "456 User St",
                            Avatar = "avatar2.png",
                            Birthday = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(2990),
                            Description = "Regular user",
                            DistrictId = "002",
                            Email = "user@example.com",
                            EmailVerifiedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(2989),
                            FullName = "Normal User",
                            Ip = "192.168.1.2",
                            Password = "hashed_password",
                            Phone = "0987654321",
                            ProvinceId = "02",
                            Role = (byte)0,
                            UpdatedAt = new DateTime(2024, 10, 30, 22, 17, 31, 290, DateTimeKind.Local).AddTicks(2990),
                            UserAgent = "Mozilla/5.0",
                            WardId = "0002"
                        });
                });

            modelBuilder.Entity("DashboardManager.Models.Feedback", b =>
                {
                    b.HasOne("DashboardManager.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DashboardManager.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DashboardManager.Models.Order", b =>
                {
                    b.HasOne("DashboardManager.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DashboardManager.Models.OrderDetail", b =>
                {
                    b.HasOne("DashboardManager.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DashboardManager.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DashboardManager.Models.Product", b =>
                {
                    b.HasOne("DashboardManager.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DashboardManager.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DashboardManager.Models.Student", b =>
                {
                    b.HasOne("DashboardManager.Models.Grade", "Grade")
                        .WithMany("Students")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("DashboardManager.Models.Grade", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
